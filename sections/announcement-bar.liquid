<div class="utility-bar gradient utility-bar--bottom-border utility-bar--bottom-border-social-only" {{ block.shopify_attributes }} >
  <div class="page-width utility-bar__grid utility-bar__grid--3-col">
        <div class="announcement-bar">
          <div class="grid grid--1-col slider slider--everywhere" >
              <div class="dynamic-content-container"></div>
          </div>
        </div>
  </div>
</div>

<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
<script>
  var myGlobalVariable = localStorage.getItem('myGlobalVariable') || '';
  
  function getUrlParameter(name) {
       name = name.replace(/[\[]/, '\\[').replace(/[\]]/, '\\]');
       var regex = new RegExp('[\\?&]' + name + '=([^&#]*)');
       var results = regex.exec(location.search);
       return results === null ? '' : decodeURIComponent(results[1].replace(/\+/g, ' '));
   }
   
  var utmMedium = getUrlParameter('utm_medium');
  if (utmMedium) {
      myGlobalVariable = utmMedium;
      localStorage.setItem('myGlobalVariable', myGlobalVariable);   
  }

  fetch('/admin/api/2024-08/discount_codes/count.json', {
      method: 'GET',
      headers: {
        'X-Shopify-Access-Token': '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',
        'Content-Type': 'application/json'
      }
    })
    .then(response => response.json())
    .then(data => {
      console.log('data',data);
      if (data && data.discount_code) {
       console.log('data.discount_code',data.discount_code);
      } else {
        console.log('No discount code applied.');
      }
    })
    .catch(error => {
      console.error('Error fetching discount code:', error);
    });
  
  {% for discount_application in cart.discount_applications %}
      var discont_coupon_title = '{{ discount_application.title | downcase }}';
      {%- for all_block in section.blocks -%}
          var block_coup_text = '{{ all_block.settings.code | downcase }}';
          if(discont_coupon_title == block_coup_text){
              if(myGlobalVariable != 'closed' || myGlobalVariable === ''){
                  var myGlobalVariable = '{{ all_block.settings.utmcode | downcase }}';
                  localStorage.setItem('myGlobalVariable', myGlobalVariable);
              }
          }
      {% endfor %}
  {% endfor %}
   
  function injectHTMLBasedOnGlobalVariable() {
      var container = document.querySelector('.dynamic-content-container'); // Replace with your container selector
      if (container) {
          var set_flag = false;
          {%- for block in section.blocks -%}
                var utm_value = '{{ block.settings.utmcode | downcase  }}';
                if (myGlobalVariable === utm_value) {
                  var set_flag = true;
                    container.innerHTML = `
                        <div class="grid--1-col anunment-br" style="background-color:{{block.settings.background-color}}" id="anunment-haid" >
                        <div class="announcement-bar__announcement" role="region" aria-label="{{ 'sections.header.announcement' | t }}" {{ block.shopify_attributes }} >
                              {%- if block.settings.text != blank -%}
                                  <p class="announcement-bar__message h5" style="color:{{block.settings.text-color}}">
                                      <span>{{ block.settings.text | escape }} {{ block.settings.code | escape }}</span>
                                  </p>
                              {%- endif -%}
                        </div>
                        <div class="cose-button">{% render 'close-icon' %}</div>
                    </div>
                    `;
                } 
        {%- endfor -%}
        if(set_flag === false && myGlobalVariable != 'closed'){
            var block_size = '{{section.blocks.size}}';
            var latest_cnt = 0;
            {%- for block in section.blocks -%}
                  latest_cnt = parseInt(latest_cnt) + parseInt(1);
                  if(block_size == latest_cnt){
                       container.innerHTML = `
                          <div class="grid--1-col anunment-br" style="background-color:{{block.settings.background-color}}" id="anunment-haid" >
                          <div class="announcement-bar__announcement" role="region" aria-label="{{ 'sections.header.announcement' | t }}" {{ block.shopify_attributes }} >
                                {%- if block.settings.text != blank -%}
                                    <p class="announcement-bar__message h5" style="color:{{block.settings.text-color}}">
                                        <span>{{ block.settings.text | escape }} {{ block.settings.code | escape }}</span>
                                    </p>
                                {%- endif -%}
                          </div>
                          <div class="cose-button">{% render 'close-icon' %}</div>
                      </div>
                      `;
                  }
            {%- endfor -%}
        }
      }
  }
  // Call the function to inject the HTML
  injectHTMLBasedOnGlobalVariable();
  if(myGlobalVariable != 'closed' || myGlobalVariable === ''){
     document.querySelector('#anunment-haid .cose-button').addEventListener('click', function() {
         myGlobalVariable = 'closed';
         localStorage.setItem('myGlobalVariable', 'closed');
     }); 
  }
</script>
<style>
  .cose-button svg path#Vector{
    stroke:{{section.settings.close-color}};
  }
</style>
<script>
$(".cose-button").click(function(){
  $(".anunment-br").addClass("haid-bar");
});
</script>
{% schema %}
{
  "name": "announcement-bar",
  "max_blocks": 12,
  "class": "announcement-bar-section",
  "enabled_on": {
    "groups": ["header"]
  },
  "settings": [
     {
          "type": "color",
          "id": "close-color",
          "label": "Close button color",
          "default": "#FFFFFF"
      },
  ],
  "blocks": [
    {
      "type": "announcement",
      "name": "announcement lines",
      "settings": [
        {
          "type": "color",
          "id": "background-color",
          "label": "background color",
          "default": "#FFFFFF"
        },
        {
          "type": "color",
          "id": "text-color",
          "label": "text color",
          "default": "#000"
        },
        {
          "type": "text",
          "id": "text",
          "default": "Lorem Ipsum is simply dummy",
          "label": "announcement bar"
        },
        {
          "type": "text",
          "id": "code",
          "label": "discount code"
        },
        {
          "type": "text",
          "id": "utmcode",
          "label": "utm value"
        } 
      ]
    }
  ],
  "presets": [
    {
      "name": "announcement-bar",
      "blocks": [
        {
          "type": "announcement"
        }
      ]
    }
  ]
}
{% endschema %}
